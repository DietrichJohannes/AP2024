<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAABg2lDQ1BJQ0MgcHJvZmlsZQAAKM+VkU0o
        RFEcxX8zyGBkYRaSxVtgZTZI7DREitIYZbDw3hsz1Lxnem8mG0tlqyx8bHwtbKzZWtgqpXyUrC2siI30
        /O8bNZMa5dbt/jr3ntO950LwIGtabvUgWHbeiY/GtJnkrFb7TIgW6mhgQDfd3MTUSIKK4+OWgFpvoiqL
        /43G1KJrQkATHjRzTl54QbhvNZ9TvCMcMZf0lPCpcJcjFxS+V7pR5BfFGZ+DKjPiJOJDwhFhLVPGRhmb
        S44l3CvcnrJsyQ/OFDmleE2xlS2YP/dULwwv2tNTSpfZxihjTDCJhkGBZbLkicpqi+ISl/1YBX+r758U
        lyGuZUxxDLOChe77UX/wu1s33dNdTArHoObJ8946oHYLvjY97/PQ876OoOoRLuySf+UA+t9F3yxp7fvQ
        tA5nlyXN2IbzDWh5yOmO7ktVMoPpNLyeyDclofka6ueKvf3sc3wHCelq/Ap296AzI9nzFd4dKu/tzzN+
        f8S+Ac3/csvPotfUAAAACXBIWXMAAAsPAAALDwGS+QOlAAAAB3RJTUUH6AgYCQ4Dm0VARQAAC9hJREFU
        eF7t1NGxpLgBRuHJxn52Eo7CGTmSzcnvfnUE19W7f88wfQ8ggQAJzld1qrb2IiHU0vyQJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJElS3/71x9+/lspjku6KLv5cGSLpjujSz5Uhku6GLvxSGSbpTuiyL5Vh
        ku6CLnpJGS7pDuiSl5ThkkZHF7ykDJd0B3TJS8pwSaOjC15ShksaHV3w0jKFpJHR5S4tU0gaGV3u0jKF
        pJHR5S4tU0gaGV3u0jKFpJHR5a4p00gaFV3smjKNpFHRxS4tU0jqUemlpedKyxSSzkYX8oqyHElHowvY
        Q1mepJbosvValixpL7pgvZelS9qKLtYdy+dKeqFL8qSyDdKz0GUw/0HQzdGhNy5bJo2PDriVlS2UxkSH
        2raVLZXGQIfY9pftlfpEh9balq2W+kKH1Y4r2y5djw6oHV+2X7oOHUw7t/wU0rnoMLYo06+isU8tWyKd
        gw5hbZlqE5rv6WVrpGPR4SstU2xGc9qvsk3SMejQrZWhu9Hc9r1sl9QWHbalMqwJmt+Wy9ZJbdAho/J4
        M/QOKytbKO1Dh+uzPNoUvedu5VN/ome2liml7ehgTctjzdG77lo++Rt6trZMJdWjA/UujxyG3nlGef1P
        9Ezr8qpFNK60TCHVocP0Kn8+DL3z6PJqRM+3Lq9aRWNLynCpDB2iV/nzYeidR5VXFqM5WpbXFKHxa2Wo
        tO6Kw/P5zqPK6zah+VqVV1SheZbKMGneVYfm871HlFftQvO2Kq+oRnNReVyad8WBmb7ziPKapug9e8vU
        m9Gcn+VR6bsrDsr0nUeU1xyC3re3TL0ZzTktj0nfXXFIpoezZZn+cPTuPWXaXWjeaXlM+uWKwzE9lC3L
        9KehNewp0+5Gc7/LI9JfrjgUn4eyRZn6dLSWrWXKJmj+V/mzdA06lHvL1JehNW0tUzZB87/Kn6Xz0YHc
        Wqbc7N///PH1Lv9rE1rb1jJlM2e8QypCh3FrmXKX6T8AvfwjkOmaOus90iI6iFvLlLt9/iOw5x8CWmdt
        maq5s94joc8DuKdM2QT9A/Aqf65G660tUzV3xjskND18e8p0zdDln5bHitGaa8tUhzjrPdJvpgdva5mq
        Kbr0n+XRYrT2mjLNYc56j/Sn6eHeWqZqji78XBlShL6hpkxzmLPeI3V/GeiyU3m8CH1HTZnmUGe9Rw/3
        ebhryzSHocs+V4YUoW8pLVNIY6PDXVOmORRd9LkypAh9T2mZQhobHe7SMsXh6KLPlSHF6LtKyxTSuOhg
        l5YpDkcXfa4MqULfVlKGS+Oig11Shp+CLvpSGVaMvq+kDJfGRIe6pAw/DV3ypTKsGH1jSRkujYkOdUkZ
        fhq65EtlWBX6zrUyVBoTHeq1MvR0dNHnypAq9K1rZag0JjrUa2Xo6eiiz5Uh1eh7l8owaUx0qNfK0NPR
        RV8qw6rQ9y6VYdKY6FAvlWGXoEu+VIZVoW9eKsOkMdGhXirDLkGXfKkMq0bfPVeGSOOhA71Uhl2GLvlS
        GVaNvn2uDJHGQwd6qQy7DF3ypTKsGn37XBkijYcO9FwZcim65EtlWDX6/rkyRBoPHei5MuRSdMnXytBq
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DMWKXwAAAABJRU5ErkJggg==
</value>
  </data>
</root>