<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DMWKXwAAAABJRU5ErkJggg==
</value>
  </data>
</root>